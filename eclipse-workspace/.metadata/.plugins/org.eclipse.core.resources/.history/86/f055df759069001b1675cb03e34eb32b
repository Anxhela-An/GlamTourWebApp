import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import static javax.swing.JOptionPane.ERROR_MESSAGE;

public class ReservationApp extends JFrame {

    private static final List<Udhetim> UDHETIMET_E_LEJUARA = Arrays.asList(
            new Udhetim("Milan", "Tirana", 100.99),
            new Udhetim("Tirana", "Rome", 130.99),
            new Udhetim("Tirana", "Athens", 100.99),
            new Udhetim("Athens", "Frankfurt", 200.99),
            new Udhetim("Paris", "Tirana", 150.99),
            new Udhetim("Lisbon", "Nice", 106.99)
    );

    private Rezervim rezervim;

    public ReservationApp() {
        super("Reservation App");
        setVisible(true);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        setSize(700, 500);
        JPanel pane = new JPanel();
        setContentPane(pane);

        inicializoFormen();
    }

    

    public void inicializoFormen() {
        JPanel paneli = new JPanel();

        paneli.setLayout(new GridLayout(5, 4)); // 5 rreshta 4 kolona

        // Emri
        paneli.add(new JLabel("Emri"));
        JTextField emriInput = new JTextField();
        paneli.add(emriInput);

        // Mbiemri
        paneli.add(new JLabel("Mbiemri"));
        JTextField mbiemriInput = new JTextField();
        paneli.add(mbiemriInput);

        // Nisja
        paneli.add(new JLabel("Nisja"));
        JComboBox<String> nisjaInput = new JComboBox<>(getNisjet());
        paneli.add(nisjaInput);

        // Destinacion
        paneli.add(new JLabel("Destinacioni"));
        JComboBox<String> destinacioniInput = new JComboBox<>(getDestinacionet());
        paneli.add(destinacioniInput);

        // Tipi i udhetimit
        ButtonGroup grupimiRadioButonave = new ButtonGroup(); // Nevojitet qe vtm nje radio button te selektohet
        JRadioButton oneWay = new JRadioButton("One way");
        JRadioButton roundTrip = new JRadioButton("RoundTrip");
        grupimiRadioButonave.add(oneWay);
        grupimiRadioButonave.add(roundTrip);

        paneli.add(new JLabel("Tipi i udhetimit"));
        paneli.add(oneWay);
        paneli.add(roundTrip);
        paneli.add(new JLabel("")); // Per te mbushur njesine bosh

        // Nr i personave
        paneli.add(new JLabel("Nr i personave"));
        JComboBox<Integer> nrIPersonaveInput = new JComboBox<>(new Integer[]{1, 2, 3, 4, 5});
        paneli.add(nrIPersonaveInput);

        paneli.add(new JLabel("")); // Per te mbushur njesine bosh
        paneli.add(new JLabel("")); // Per te mbushur njesine bosh

        // Butonat
        JButton rezervo = new JButton("Rezervo");
        JButton afishoDetaje = new JButton("Afisho Detaje");
        JButton pastro = new JButton("Clear");

        rezervo.addActionListener(new ActionListener() { // Eventi kur klikohet butoni rezervo
            @Override
            public void actionPerformed(ActionEvent actionEvent) {

                String emri = emriInput.getText();

                if (emri == null || emri.isEmpty()) { // TODO check other validations
                    afishoErrorMessage("Ju lutem fusni emrin");
                    return;
                }

                String mbiemri = mbiemriInput.getText();
                String nisja = (String) nisjaInput.getSelectedItem();
                String destinacion = (String) destinacioniInput.getSelectedItem();
                int nrPersonave = (int) nrIPersonaveInput.getSelectedItem();
                boolean isOneWay = oneWay.isSelected();

                Udhetim udhetim = merrUdhetiminSipasParametrave(nisja, destinacion);

                if (udhetim == null) { // TODO check other validations
                    afishoErrorMessage("Udhetimi i kerkuar nuk ofrohet per momentin");
                    return;
                }

                rezervim = new Rezervim(emri, mbiemri, nrPersonave, isOneWay, udhetim);

                afishoSuccessMessage(rezervim.getFature());
            }
        });


        pastro.addActionListener(new ActionListener() { // Eventi kur klikohet butoni pastro
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                emriInput.setText("");
                mbiemriInput.setText("");
                grupimiRadioButonave.clearSelection();
            }
        });

        afishoDetaje.addActionListener(new ActionListener() { // Eventi kur klikohet butoni afishoDetaje
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                if (rezervim == null) {
                    afishoErrorMessage("Nuk ka rezervim te bere");
                    return;
                }
                afishoSuccessMessage(rezervim.getDetaje());
            }
        });

        paneli.add(rezervo);
        paneli.add(afishoDetaje);
        paneli.add(pastro);

        add(paneli); // Shto ne jFrame
    }

    private Udhetim merrUdhetiminSipasParametrave(String nisja, String destinacion) {
        for (Udhetim udhetim : UDHETIMET_E_LEJUARA) {
            if (udhetim.getNisja().equals(nisja) && udhetim.getDestinacion().equals(destinacion)) {
                return udhetim;
            }
        }
        return null;
    }

    private String[] getNisjet() {
        List<String> nisjet = new ArrayList<>();
        for (Udhetim udhetim : UDHETIMET_E_LEJUARA) {
            nisjet.add(udhetim.getNisja());
        }
        return nisjet.stream().toArray(String[]::new);
    }

    private String[] getDestinacionet() {
        List<String> destinacionet = new ArrayList<>();
        for (Udhetim udhetim : UDHETIMET_E_LEJUARA) {
            destinacionet.add(udhetim.getDestinacion());
        }
        return destinacionet.stream().toArray(String[]::new);
    }

    private void afishoSuccessMessage(String message) {
        JOptionPane.showMessageDialog(this, message);
    }

    private void afishoErrorMessage(String message) {
        JOptionPane.showMessageDialog(this, message, "Failure", ERROR_MESSAGE);
    }
    public static void main(String a[]) {
        new ReservationApp();
    }
}